Exo: Que produit ce code
TODO: faut-il refactoriser cet exo en qqch de plus court et moins chargé ??
TODO: on pourrait faire un sous exo par question, retirer tout ce qui est affichage. Demander de remplir juste un tableau d'une ligne avec les valeurs de chaque variable ou de celles qui sont pertinentes. Ca me paraît être beaucoup de charge mentale à lire pour pas grand chose.

Que produit le code ci-dessous ?

~~~cpp
#include <cstdlib>
#include <iostream>

using namespace std;

int& min(int& a, int& b, int& c) {
      return a < c ?
         a < c ? a : c :
         b < c ? b : c ;
}

int main() {

   int a = 12,
       b = 7,
       c = 9;

   cout << "1) a:" << a << " b:" << b << " c:" << c
        << " => min:" << min(a, b, c) << " ";
   int& d = min(a, b, c);
   cout << "d:" << d << endl << endl;

   b = 5;
   cout << "2) b = 5;" << endl;
   cout << "a:" << a << " b:" << b << " c:" << c
        << " => min:" << min(a, b, c) << " ";
   cout << "d:" << d << endl << endl;

   d=3;
   cout << "3) d = 3;" << endl;
   cout << "a:" << a << " b:" << b << " c:" << c
        << " => min:" << min(a, b, c) << " ";
   cout << "d:" << d << endl << endl;

   a=1;
   cout << "4) a = 1;" << endl;
   cout << "a:" << a << " b:" << b << " c:" << c
        << " => min:" << min(a, b, c) << " ";
   cout << "d:" << d << endl << endl;

   cout << "5) min(a, b, c) = 0;" << endl;
   min(a, b, c) = 0;
   cout << "a:" << a << " b:" << b << " c:" << c
        << " => min:" << min(a, b, c) << " ";
   cout << "d:" << d << endl << endl;

   return EXIT_SUCCESS;
}

~~~
Table:
Header:
- #
- a
- b
- c
- min
- d
Row:
- 1)
- [text] 12
- [text] 7
- [text] 9
- [text] 7
- [text] 7
Row:
- 2)
- [text] 12
- [text] 5
- [text] 9
- [text] 5
- [text] 5
Row: 
- 3)
- [text] 12
- [text] 3
- [text] 9
- [text] 3
- [text] 3
Row:
- 4)
- [text] 1
- [text] 3
- [text] 9
- [text] 1
- [text] 3
Row:
- 5)
- [text] 0
- [text] 3
- [text] 9
- [text] 0
- [text] 3
