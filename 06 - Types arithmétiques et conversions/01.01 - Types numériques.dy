Exo: Types numériques (théorie)

Subexo: [open]
TODO: peut-on mettre [open] dans un subexo ?
1. Dressez la liste exhaustive de tous les types entiers signés supportés par C++ 

Solution: 

~~~cpp 
// chaque ligne correspond à un type qui peut s'écrire de diverse manières.

signed char;
signed short int; signed short; short int; short; 
signed int; int; signed;
signed long int; signed long; long int; long;
signed long long int; signed long long; long long int; long long; 
~~~

Notons que l'ordre des mots clés peut également varier. Par exemple, le type `signed long long int` peut 
aussi s'écrire 

~~~cpp 
signed long long int; 
signed long int long; 
signed int long long; 
long signed long int; 
long signed int long;
// etcetera ... 
~~~

Subexo: [open]

2. Idem pour les entiers non signés 

Solution: 

~~~cpp 
unsigned char;
unsigned short int; unsigned short; 
unsigned int; unsigned;
unsigned long int; unsigned long; 
unsigned long long int; unsigned long long; 
~~~

Subexo: 

3. Le type int est-il signé ou non signé par défaut ?
Options:
- signé
- non signé
- cela dépend du compilateur

Solution: signé

Subexo: 

4. Le type char est-il signé ou non signé par défaut ? 
Options:
- signé
- non signé
- cela dépend du compilateur

Solution: cela dépend du compilateur

Subexo: 

5. Le domaine de définition des entiers est-il fixé par la norme ou dépend-il de l'environnement utilisé ?
Options:
- Par la norme
- Dépend de l'environnement utilisé

Solution: Dépend de l'environnement utilisé
